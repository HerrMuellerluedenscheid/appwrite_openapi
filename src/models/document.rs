/*
 * Appwrite
 *
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.4.9
 * Contact: team@appwrite.io
 * Generated by: https://openapi-generator.tech
 */

/// Document : Document



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Document {
    /// Document ID.
    #[serde(rename = "$id")]
    pub dollar_id: String,
    /// Collection ID.
    #[serde(rename = "$collectionId")]
    pub dollar_collection_id: String,
    /// Database ID.
    #[serde(rename = "$databaseId")]
    pub dollar_database_id: String,
    /// Document creation date in ISO 8601 format.
    #[serde(rename = "$createdAt")]
    pub dollar_created_at: String,
    /// Document update date in ISO 8601 format.
    #[serde(rename = "$updatedAt")]
    pub dollar_updated_at: String,
    /// Document permissions. [Learn more about permissions](https://appwrite.io/docs/permissions).
    #[serde(rename = "$permissions")]
    pub dollar_permissions: Vec<String>,
}

impl Document {
    /// Document
    pub fn new(dollar_id: String, dollar_collection_id: String, dollar_database_id: String, dollar_created_at: String, dollar_updated_at: String, dollar_permissions: Vec<String>) -> Document {
        Document {
            dollar_id,
            dollar_collection_id,
            dollar_database_id,
            dollar_created_at,
            dollar_updated_at,
            dollar_permissions,
        }
    }
}


