/*
 * Appwrite
 *
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.4.9
 * Contact: team@appwrite.io
 * Generated by: https://openapi-generator.tech
 */

/// Variable : Variable



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Variable {
    /// Variable ID.
    #[serde(rename = "$id")]
    pub dollar_id: String,
    /// Variable creation date in ISO 8601 format.
    #[serde(rename = "$createdAt")]
    pub dollar_created_at: String,
    /// Variable creation date in ISO 8601 format.
    #[serde(rename = "$updatedAt")]
    pub dollar_updated_at: String,
    /// Variable key.
    #[serde(rename = "key")]
    pub key: String,
    /// Variable value.
    #[serde(rename = "value")]
    pub value: String,
    /// Service to which the variable belongs. Possible values are \"project\", \"function\"
    #[serde(rename = "resourceType")]
    pub resource_type: String,
    /// ID of resource to which the variable belongs. If resourceType is \"project\", it is empty. If resourceType is \"function\", it is ID of the function.
    #[serde(rename = "resourceId")]
    pub resource_id: String,
}

impl Variable {
    /// Variable
    pub fn new(dollar_id: String, dollar_created_at: String, dollar_updated_at: String, key: String, value: String, resource_type: String, resource_id: String) -> Variable {
        Variable {
            dollar_id,
            dollar_created_at,
            dollar_updated_at,
            key,
            value,
            resource_type,
            resource_id,
        }
    }
}


