/*
 * Appwrite
 *
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.4.9
 * Contact: team@appwrite.io
 * Generated by: https://openapi-generator.tech
 */

/// Bucket : Bucket



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Bucket {
    /// Bucket ID.
    #[serde(rename = "$id")]
    pub dollar_id: String,
    /// Bucket creation time in ISO 8601 format.
    #[serde(rename = "$createdAt")]
    pub dollar_created_at: String,
    /// Bucket update date in ISO 8601 format.
    #[serde(rename = "$updatedAt")]
    pub dollar_updated_at: String,
    /// Bucket permissions. [Learn more about permissions](https://appwrite.io/docs/permissions).
    #[serde(rename = "$permissions")]
    pub dollar_permissions: Vec<String>,
    /// Whether file-level security is enabled. [Learn more about permissions](https://appwrite.io/docs/permissions).
    #[serde(rename = "fileSecurity")]
    pub file_security: bool,
    /// Bucket name.
    #[serde(rename = "name")]
    pub name: String,
    /// Bucket enabled.
    #[serde(rename = "enabled")]
    pub enabled: bool,
    /// Maximum file size supported.
    #[serde(rename = "maximumFileSize")]
    pub maximum_file_size: i32,
    /// Allowed file extensions.
    #[serde(rename = "allowedFileExtensions")]
    pub allowed_file_extensions: Vec<String>,
    /// Compression algorithm choosen for compression. Will be one of none, [gzip](https://en.wikipedia.org/wiki/Gzip), or [zstd](https://en.wikipedia.org/wiki/Zstd).
    #[serde(rename = "compression")]
    pub compression: String,
    /// Bucket is encrypted.
    #[serde(rename = "encryption")]
    pub encryption: bool,
    /// Virus scanning is enabled.
    #[serde(rename = "antivirus")]
    pub antivirus: bool,
}

impl Bucket {
    /// Bucket
    pub fn new(dollar_id: String, dollar_created_at: String, dollar_updated_at: String, dollar_permissions: Vec<String>, file_security: bool, name: String, enabled: bool, maximum_file_size: i32, allowed_file_extensions: Vec<String>, compression: String, encryption: bool, antivirus: bool) -> Bucket {
        Bucket {
            dollar_id,
            dollar_created_at,
            dollar_updated_at,
            dollar_permissions,
            file_security,
            name,
            enabled,
            maximum_file_size,
            allowed_file_extensions,
            compression,
            encryption,
            antivirus,
        }
    }
}


