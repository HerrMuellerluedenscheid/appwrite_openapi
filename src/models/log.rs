/*
 * Appwrite
 *
 * Appwrite backend as a service cuts up to 70% of the time and costs required for building a modern application. We abstract and simplify common development tasks behind a REST APIs, to help you develop your app in a fast and secure way. For full API documentation and tutorials go to [https://appwrite.io/docs](https://appwrite.io/docs)
 *
 * The version of the OpenAPI document: 1.4.9
 * Contact: team@appwrite.io
 * Generated by: https://openapi-generator.tech
 */

/// Log : Log



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Log {
    /// Event name.
    #[serde(rename = "event")]
    pub event: String,
    /// User ID.
    #[serde(rename = "userId")]
    pub user_id: String,
    /// User Email.
    #[serde(rename = "userEmail")]
    pub user_email: String,
    /// User Name.
    #[serde(rename = "userName")]
    pub user_name: String,
    /// API mode when event triggered.
    #[serde(rename = "mode")]
    pub mode: String,
    /// IP session in use when the session was created.
    #[serde(rename = "ip")]
    pub ip: String,
    /// Log creation date in ISO 8601 format.
    #[serde(rename = "time")]
    pub time: String,
    /// Operating system code name. View list of [available options](https://github.com/appwrite/appwrite/blob/master/docs/lists/os.json).
    #[serde(rename = "osCode")]
    pub os_code: String,
    /// Operating system name.
    #[serde(rename = "osName")]
    pub os_name: String,
    /// Operating system version.
    #[serde(rename = "osVersion")]
    pub os_version: String,
    /// Client type.
    #[serde(rename = "clientType")]
    pub client_type: String,
    /// Client code name. View list of [available options](https://github.com/appwrite/appwrite/blob/master/docs/lists/clients.json).
    #[serde(rename = "clientCode")]
    pub client_code: String,
    /// Client name.
    #[serde(rename = "clientName")]
    pub client_name: String,
    /// Client version.
    #[serde(rename = "clientVersion")]
    pub client_version: String,
    /// Client engine name.
    #[serde(rename = "clientEngine")]
    pub client_engine: String,
    /// Client engine name.
    #[serde(rename = "clientEngineVersion")]
    pub client_engine_version: String,
    /// Device name.
    #[serde(rename = "deviceName")]
    pub device_name: String,
    /// Device brand name.
    #[serde(rename = "deviceBrand")]
    pub device_brand: String,
    /// Device model name.
    #[serde(rename = "deviceModel")]
    pub device_model: String,
    /// Country two-character ISO 3166-1 alpha code.
    #[serde(rename = "countryCode")]
    pub country_code: String,
    /// Country name.
    #[serde(rename = "countryName")]
    pub country_name: String,
}

impl Log {
    /// Log
    pub fn new(event: String, user_id: String, user_email: String, user_name: String, mode: String, ip: String, time: String, os_code: String, os_name: String, os_version: String, client_type: String, client_code: String, client_name: String, client_version: String, client_engine: String, client_engine_version: String, device_name: String, device_brand: String, device_model: String, country_code: String, country_name: String) -> Log {
        Log {
            event,
            user_id,
            user_email,
            user_name,
            mode,
            ip,
            time,
            os_code,
            os_name,
            os_version,
            client_type,
            client_code,
            client_name,
            client_version,
            client_engine,
            client_engine_version,
            device_name,
            device_brand,
            device_model,
            country_code,
            country_name,
        }
    }
}


